// Generated by CoffeeScript 1.4.0
(function() {
  var Collectd, RfxCom, client, config, probe, rfxtrx, sensors, values, _ref;

  require('require-yaml');

  RfxCom = require('rfxcom');

  Collectd = require('collectdout');

  config = require('./config.yml');

  rfxtrx = new RfxCom.RfxCom(config.rfxcom.usb);

  client = new Collectd(config.collectd.interval, config.collectd.host, config.collectd.port);

  sensors = {};

  _ref = config.probes;
  for (probe in _ref) {
    values = _ref[probe];
    sensors[values.id] = {
      name: values.name,
      temperature: 0.0,
      humidity: 0,
      batteryLevel: 0,
      plugin: client.plugin('rfxcom', probe)
    };
  }

  rfxtrx.on("th1", function(evt) {
    sensors[evt.id].temperature = evt.temperature;
    sensors[evt.id].humidity = evt.humidity;
    return sensors[evt.id].batteryLevel = evt.batteryLevel;
  });

  rfxtrx.initialise(function() {
    return console.log("Device initialized");
  });

  setInterval(function() {
    var sensor_id, _results;
    _results = [];
    for (sensor_id in sensors) {
      values = sensors[sensor_id];
      values.plugin.setGauge('temperature', 'temperature', values.temperature);
      values.plugin.setGauge('humidity', 'humidity', values.humidity);
      _results.push(values.plugin.setGauge('gauge', 'batteryLevel', values.batteryLevel));
    }
    return _results;
  }, config.collectd.interval);

}).call(this);
